{"version":3,"sources":["context.js","Components/GlobalComponents/NavigationBar.js","Components/GlobalComponents/ModalSettings.js","Components/WeeklyPerfComponents/BarGraphItem.js","Components/GlobalComponents/SectionTitle.js","Components/WeeklyPerfComponents/WeeklyPerformance.js","Components/MyTasksComponents/TaskItem.js","Components/MyTasksComponents/MyTasks.js","Components/TeamSummaryComponents/TeamSummary.js","Components/MyQueueComponents/EditCaseButton.js","Components/MyQueueComponents/CaseButton.js","Components/MyQueueComponents/NewCaseButton.js","Components/MyQueueComponents/MyQueue.js","Components/DashboardView.js","Components/CaseSearchView.js","Router.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","updatedQueue","type","random2","Math","ceil","random","random3","random4","updatedUsers","name","range","parseInt","payload","monthLeader","teamAverage","i","length","Object","objectSpread","users","concat","console","log","myQueue","unshift","map","caseObj","id","user","filter","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","uniqid","caseId","numHospitals","category","balance","isComplete","hospitals","categories","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","NavigationBar","className","Link","to","src","height","alt","style","marginTop","data-toggle","data-target","ModalSettings","e","target","defineProperty","_this2","data-show","tabIndex","role","border","data-dismiss","aria-label","fontSize","aria-hidden","onChange","updateRange1","BarGraphItem","_this$props$user","width","toString","aria-valuenow","aria-valuemin","aria-valuemax","SectionTitle","onClick","toggleView","h2","isVisible","WeeklyPerformance","bind","assertThisInitialized","SectionTitle_SectionTitle","BarGraphItem_BarGraphItem","TaskItem","icon","text","_this$state","taskRendering","MyTasks","TaskItem_TaskItem","TeamSummary","user1","EditCaseButton","editCase","handleChange","updateCase","_this2$props$currentC","currentCase","onSubmit","htmlFor","display","CaseButton","case","isEditing","parseFloat","toFixed","replace","_this2$state","EditCaseButton_EditCaseButton","completeCase","deleteCase","slice","showBalance","NewCaseButton","toggleNewCase","preventDefault","newCaseHidden","createCase","toLowerCase","placeholder","MyQueue","uniqId","NewCaseButton_NewCaseButton","caseItem","CaseButton_CaseButton","DashboardView","react_responsive_default","minWidth","matches","Fragment","WeeklyPerformance_WeeklyPerformance","MyTasks_MyTasks","TeamSummary_TeamSummary","MyQueue_MyQueue","CaseSearchView","Router","context_Provider","BrowserRouter","basename","process","ModalSettings_ModalSettings","NavigationBar_NavigationBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a59cd107.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport uniqid from \"uniqid\"\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  let updatedQueue = []\n  switch (action.type) {\n    case `RANGE_UPDATE`:\n      const random2 = Math.ceil(Math.random() * 101)\n      const random3 = Math.ceil(Math.random() * 101)\n      const random4 = Math.ceil(Math.random() * 101)\n      const updatedUsers = [\n        { name: \"user1\", range: parseInt(action.payload) },\n        { name: \"user2\", range: random2 },\n        { name: \"user3\", range: random3 },\n        { name: \"user4\", range: random4 }\n      ]\n\n      let monthLeader = state.monthLeader\n      monthLeader.range = 0\n      let teamAverage = updatedUsers[0].range\n      for (let i = 0; i < updatedUsers.length; i++) {\n        if (updatedUsers[i].range >= monthLeader.range) {\n          monthLeader = updatedUsers[i]\n          teamAverage += updatedUsers[i].range\n        }\n      }\n      teamAverage = parseInt(teamAverage / updatedUsers.length)\n\n      return {\n        ...state,\n        users: [...updatedUsers],\n        monthLeader,\n        teamAverage\n      }\n\n    case `CREATE_CASE`:\n      console.log(state.myQueue)\n      state.myQueue.unshift(action.payload)\n      console.log(updatedQueue, action.payload)\n      return {\n        ...state,\n        myQueue: state.myQueue\n      }\n\n    case `UPDATE_CASE`:\n      updatedQueue = state.myQueue.map((caseObj, i) => {\n        if (action.payload.id === i) {\n          return action.payload.user\n        }\n        return caseObj\n      })\n\n      return {\n        ...state,\n        myQueue: updatedQueue\n      }\n\n    case `DELETE_CASE`:\n      updatedQueue = state.myQueue.filter(\n        caseObj => action.payload.id !== caseObj.id\n      )\n\n      return {\n        ...state,\n        myQueue: updatedQueue\n      }\n\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    users: [\n      { name: \"user1\", range: 75 },\n      { name: \"user2\", range: 81 },\n      { name: \"user3\", range: 65 },\n      { name: \"user4\", range: 34 }\n    ],\n    myQueue: [\n      {\n        id: uniqid(),\n        caseId: \"325314\",\n        numHospitals: 2,\n        category: \"respiratory\",\n        balance: 0,\n        isComplete: false\n      },\n      {\n        id: uniqid(),\n        caseId: \"674655\",\n        numHospitals: 4,\n        category: \"dentistry\",\n        balance: 12021.97,\n        isComplete: false\n      },\n      {\n        id: uniqid(),\n        caseId: \"105674\",\n        numHospitals: 3,\n        category: \"orthopedic\",\n        balance: 0,\n        isComplete: true\n      }\n    ],\n    monthLeader: { name: \"user2\", range: 75 },\n    teamAverage: 64,\n    hospitals: [\n      \"Princeton Hospital\",\n      \"Memorial West\",\n      \"Radiology\",\n      \"Emergency\"\n    ],\n    categories: [\n      \"Orthopedic\",\n      \"Dentist\",\n      \"Neurology\",\n      \"Optometry\",\n      \"Respiratory\"\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default class NavigationBar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar sticky-top navbar-expand-md mr-auto navbar-light bg-light d-flex justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img\n            src=\"http://alanthinks.com/projects/medical-audit-app/media/ev-logo.png\"\n            height=\"30\"\n            alt=\"Envision Logo\"\n          />\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0 dropleft\">\n            <span style={{ marginTop: \"12%\" }}> Welcome Leo!</span>\n            {/* <li className=\"nav-item dropdown\"> */}\n            <li\n              className=\"nav-link\"\n              data-toggle=\"modal\"\n              data-target=\"#modalSettings\"\n            >\n              <img\n                className=\"user-picture\"\n                src=\"http://alanthinks.com/projects/medical-audit-app/media/users/user1.jpg\"\n                alt=\"User 1\"\n              />\n              <i className=\"fas fa-cog\" />\n            </li>\n            {/* <li className=\"nav-item dropdown\">\n              <li\n                className=\"nav-link dropdown-toggle \"\n                id=\"dropdownId\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <img\n                  className=\"user-picture\"\n                  src=\"http://alanthinks.com/projects/medical-audit-app/media/users/user1.jpg\"\n                  alt=\"\"\n                />\n              </li> */}\n            {/* <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                <Link to=\"/\" className=\"dropdown-item\">\n                  My Profile\n                </Link>\n                <Link to=\"/\" className=\"dropdown-item\">\n                  Logout\n                </Link>\n              </div> */}\n            {/* </li> */}\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\n\nexport default class ModalSettings extends Component {\n  state = {\n    id: \"88888\",\n    numHospitals: 2,\n    category: \"respiratory\",\n    balance: 12,\n    isComplete: false\n  }\n\n  updateRange1(e, dispatch) {\n    dispatch({ type: \"RANGE_UPDATE\", payload: e.target.value })\n  }\n\n  // updateCase(dispatch, updatedCase) {\n  //   dispatch({ type: \"CASE_UPDATE\", payload: updatedCase })\n  // }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          const range = value.users[0].range\n          return (\n            <div\n              data-show\n              className=\"modal fade\"\n              id=\"modalSettings\"\n              tabIndex=\"-1\"\n              role=\"dialog\"\n            >\n              <div\n                className=\"modal-dialog modal-dialog-centered\"\n                role=\"document\"\n              >\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\" style={{ border: \"none\" }}>\n                    <h2 className=\"modal-title\">\n                      <i className=\"fas fa-cog\" />{\" \"}\n                      {`Demo Range Selector: ${range}%`}\n                    </h2>\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    >\n                      <span style={{ fontSize: \"2.2rem\" }} aria-hidden=\"true\">\n                        &times;\n                      </span>\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {/* <div className=\"ml-4\">\n                      <ol>\n                        <li>Directly modifies User 1's bar</li>\n                        <li>Randomizes the other 3 bars</li>\n                      </ol>\n                    </div>\n                    <h3>Subsequently the following happens:</h3>\n                    <div className=\"ml-4\">\n                      <ol>\n                        <li>The new \"Monthly Leader\" is shown</li>\n                        <li>The team average is calculated</li>\n                        <li>\n                          Placeholder: User 1's value is shown in \"Team Tasks\"\n                        </li>\n                      </ol>\n                    </div> */}\n                    <h3>This app is still in progress.</h3>\n                    <br />\n                    <h3>\n                      <em>Select a value below:</em>\n                    </h3>\n                    <input\n                      onChange={e => this.updateRange1(e, dispatch)}\n                      value={range}\n                      type=\"range\"\n                      className=\"custom-range\"\n                      id=\"customRange1\"\n                    />\n                    {/* <h3>Modify third case in \"My Queue\":</h3>\n                    <br />\n                    <form>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"idNumberInput\">ID Number</label>\n                        <input\n                          className=\"form-control\"\n                          id=\"idNumberInput\"\n                          name=\"id\"\n                          value={this.state.id}\n                          onChange={e => this.handleChange(e)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"specialtySelect\">\n                          Specialty (Image)\n                        </label>\n                        <select className=\"form-control\" id=\"specialtySelect\">\n                          <option>Orthopedic</option>\n                          <option>Dentist</option>\n                          <option>Neurology</option>\n                          <option>Optometry</option>\n                          <option>Respiratory</option>\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"labelsSelect\">Number of Labels</label>\n                        <select className=\"form-control\" id=\"labelsSelect\">\n                          <option>1</option>\n                          <option>2</option>\n                          <option>3</option>\n                          <option>4</option>\n                        </select>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"balanceInput\">Balance</label>\n                          <input\n                            className=\"form-control\"\n                            id=\"balanceInput\"\n                            placeholder={this.state.balance}\n                          />\n                        </div>\n                      </div>\n                    </form> */}\n                  </div>\n\n                  {/* <div className=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary disabled\"\n                      data-dismiss=\"modal\"\n                      onClick={e => this.updateCase(dispatch, this.state)}\n                    >\n                      Update (Working on it now)\n                    </button>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\n\nexport default class BarGraphItem extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { range, name } = this.props.user\n          return (\n            <div className=\"bar-graph-group-item\">\n              <img\n                data-toggle=\"modal\"\n                data-target=\"#modalSettings\"\n                alt=\"placeholder alt text\"\n                src={`http://alanthinks.com/projects/medical-audit-app/media/users/${name}.jpg`}\n              />\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  style={{ width: range.toString() + \"%\" }}\n                  aria-valuenow={range}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  {range < 10 ? \"\" : range.toString() + \"%\"}{\" \"}\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n\nexport default class SectionTitle extends Component {\n  render() {\n    return (\n      <h2 onClick={this.props.toggleView}>\n        {this.props.h2}\n        <i\n          onClick={this.props.toggleView}\n          className={`fas fa-caret-up ${\n            this.props.isVisible ? \"rotate-carat\" : \"\"\n          }`}\n        />\n      </h2>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\nimport BarGraphItem from \"./BarGraphItem\"\nimport SectionTitle from \"../GlobalComponents/SectionTitle\"\n\nexport default class WeeklyPerformance extends Component {\n  constructor() {\n    super()\n    this.state = { isVisible: true }\n    this.toggleView = this.toggleView.bind(this)\n  }\n  toggleView() {\n    this.setState({ isVisible: !this.state.isVisible })\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { users } = value\n          return (\n            <div className=\"col-lg-7 week-stats\">\n              <SectionTitle\n                h2=\"Weekly Performance\"\n                toggleView={this.toggleView}\n                isVisible={this.state.isVisible}\n              />\n              <div\n                className={`all-graph-items ${\n                  this.state.isVisible ? \"\" : \"not-visible\"\n                }`}\n              >\n                {users.map(user => (\n                  <BarGraphItem key={user.name} user={user} />\n                ))}\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\n\nexport default class TaskItem extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      icon: this.props.icon,\n      text: this.props.text\n    }\n  }\n  taskRendering() {\n    let { icon, text } = this.state\n    if (text) {\n      if (!icon) {\n        icon = \"fas fa-question-circle\"\n      }\n      return (\n        <div className=\"row task-item\">\n          <div className=\"col-2\">\n            <i className={icon} />\n          </div>\n          <div className=\"col task-text\">\n            <p>{text}</p>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"row task-item\">\n        <button className=\"btn\">New Task</button>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return this.taskRendering()\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport TaskItem from \"./TaskItem\"\nimport SectionTitle from \"../GlobalComponents/SectionTitle\"\n\nexport default class MyTasks extends Component {\n  constructor() {\n    super()\n    this.state = { isVisible: false }\n    this.toggleView = this.toggleView.bind(this)\n  }\n  toggleView() {\n    this.setState({ isVisible: !this.state.isVisible })\n  }\n  render() {\n    return (\n      <div className=\"col-lg-5 my-tasks\">\n        <SectionTitle\n          h2=\"My Tasks\"\n          toggleView={this.toggleView}\n          isVisible={this.state.isVisible}\n        />\n        <i className=\"fas fa-plus\" />\n        <div\n          className={`all-tasks ${this.state.isVisible ? \"\" : \"not-visible\"}`}\n        >\n          <TaskItem\n            icon=\"fas fa-info-circle\"\n            text=\"Barcelona vs Real Madrid Oct-28\"\n          />\n          <TaskItem text=\"Call Doctor Smith about Invoice #3434223\" />\n          <TaskItem\n            icon=\"fas fa-smile-beam\"\n            text=\"Follow Up with Mr. Smith at Memorial West\"\n          />\n          <TaskItem\n            icon=\"fas fa-info-circle\"\n            text=\"Barcelona vs Real Madrid Oct-28\"\n          />\n          <TaskItem />\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\nimport SectionTitle from \"../GlobalComponents/SectionTitle\"\n\nexport default class TeamSummary extends Component {\n  constructor() {\n    super()\n    this.state = { isVisible: false }\n    this.toggleView = this.toggleView.bind(this)\n  }\n  toggleView() {\n    this.setState({ isVisible: !this.state.isVisible })\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { teamAverage } = value\n          const user1 = value.users[0]\n          let { monthLeader } = value\n          if (monthLeader.name.length < 1) {\n            monthLeader.name = \"user2\"\n          }\n          return (\n            <div className=\"col-lg-7 summary\">\n              <SectionTitle\n                h2=\"Team Summary\"\n                toggleView={this.toggleView}\n                isVisible={this.state.isVisible}\n              />\n              <div\n                className={`row all-team-data ${\n                  this.state.isVisible ? \"\" : \"not-visible\"\n                }`}\n              >\n                <div className=\"circ1 col-lg-4\">\n                  <h3>October Leader</h3>\n                  <div className={`circ1 c100 p${monthLeader.range} big`}>\n                    <span>\n                      <img\n                        alt=\"This Week's Leader\"\n                        src={`http://alanthinks.com/projects/medical-audit-app/media/users/${\n                          monthLeader.name\n                        }.jpg`}\n                      />\n                    </span>\n                    <div className=\"slice\">\n                      <div className=\"bar\" />\n                      <div className=\"fill\" />\n                    </div>\n                  </div>\n                  <p>\n                    <span className=\"dot\" />\n                    Completed\n                  </p>\n                  <p>\n                    <span className=\"dot\" />\n                    In Progress\n                  </p>\n                  <p>\n                    <span className=\"dot\" />\n                    Under Review\n                  </p>\n                </div>\n                <div className=\"circ2 col-lg-4\">\n                  <h3>Team Average</h3>\n                  <div className={`circ2 c100 p${teamAverage} big`}>\n                    <span>{teamAverage}%</span>\n                    <div className=\"slice\">\n                      <div className=\"bar\" />\n                      <div className=\"fill\" />\n                    </div>\n                  </div>\n                  <p>\n                    <span className=\"dot\" />\n                    Completed\n                  </p>\n                  <p>\n                    <span className=\"dot\" />\n                    In Progress\n                  </p>\n                  <p>\n                    <span className=\"dot\" />\n                    Under Review\n                  </p>\n                </div>\n\n                <div className=\"circ3 col-lg-4\">\n                  <h3>Team Tasks</h3>\n                  <div className={`circ3 c100 p${user1.range} big`}>\n                    <span>{user1.range}%</span>\n                    <div className=\"slice\">\n                      <div className=\"bar\" />\n                      <div className=\"fill\" />\n                    </div>\n                  </div>\n                  <p>\n                    <span className=\"dot\" />\n                    Follow-Ups\n                  </p>\n                  <p>\n                    <span className=\"dot\" />\n                    Corrections\n                  </p>\n                  <p>\n                    <span className=\"dot\" />\n                    Verifications\n                  </p>\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\n\nexport default class EditCaseButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editCase: this.props.editCase,\n      handleChange: this.props.handleChange\n    }\n    console.log(this.props)\n    this.updateCase = this.updateCase.bind(this)\n  }\n  handleChange(e) {\n    this.state.handleChange(e)\n  }\n  updateCase(e) {\n    this.state.editCase()\n    // dispatch({ type: \"CREATE_CASE\", payload: this.state })\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { caseId, balance } = this.props.currentCase\n          return (\n            <div className={`row new-case`}>\n              <div className=\"col\">\n                <div>\n                  <i onClick={this.updateCase} className=\"fas fa-save\" />\n                </div>\n                <form onSubmit={this.updateCase}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"idNumberInput\">ID Number</label>\n                    <input\n                      className=\"form-control\"\n                      id=\"idNumberInput\"\n                      name=\"caseId\"\n                      value={caseId}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </div>\n                  {/* <div className=\"form-group\">\n                    <label htmlFor=\"specialtySelect\">Specialty (Image)</label>\n                    <div className=\"new-case-select\">\n                      <select className=\"form-control\" id=\"specialtySelect\">\n                        {categories.map((category, i) => (\n                          <option key={i} value={category.toLowerCase()}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"labelsSelect\">Number of Labels</label>\n                    <select\n                      value={numHospitals}\n                      onChange={e => this.handleChange(e)}\n                      className=\"form-control\"\n                      id=\"labelsSelect\"\n                    >\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                    </select>\n                  </div> */}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"balanceInput\">Balance</label>\n                    <input\n                      className=\"form-control\"\n                      id=\"balanceInput\"\n                      value={balance}\n                      onChange={e => this.handleChange(e)}\n                      name=\"balance\"\n                    />\n                  </div>\n                  <button\n                    style={{ display: \"none\" }}\n                    type=\"submit\"\n                    value=\"submit\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport EditCaseButton from \"./EditCaseButton\"\nimport { Consumer } from \"../../context\"\n\nexport default class CaseButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: { ...this.props.case },\n      id: this.props.id,\n      isEditing: false\n    }\n    this.editCase = this.editCase.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  deleteCase(e, dispatch) {\n    dispatch({ type: \"DELETE_CASE\", payload: this.state.user })\n  }\n\n  completeCase(e, dispatch) {\n    let { user } = this.state\n    user.isComplete = !user.isComplete\n\n    this.setState({ user: user })\n    // dispatch({ type: \"CASE_UPDATE\", payload: this.state })\n  }\n\n  handleChange(e) {\n    let { user } = this.state\n    user[e.target.name] = e.target.value\n    this.setState({ user: user })\n  }\n  editCase(e, dispatch) {\n    this.setState({\n      isEditing: !this.state.isEditing,\n      isComplete: !this.state.user.isComplete\n    })\n    if (!this.state.isEditing) {\n      dispatch({ type: \"UPDATE_CASE\", payload: this.state })\n    }\n  }\n\n  showBalance() {\n    const { balance } = this.state.user\n    if (balance <= 0) {\n      return \"\"\n    } else {\n      return (\n        <div className=\"balance\">\n          Balance:{\" \"}\n          <span>\n            $\n            {parseFloat(balance)\n              .toFixed(2)\n              .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}\n          </span>\n        </div>\n      )\n    }\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { hospitals, dispatch } = value\n          const { isEditing, user } = this.state\n          if (isEditing) {\n            return (\n              <EditCaseButton\n                currentCase={user}\n                editCase={e => this.editCase(e, dispatch)}\n                handleChange={this.handleChange}\n              />\n            )\n          }\n          return (\n            <div\n              onClick={e => this.completeCase(e, dispatch)}\n              className={`row btn-case ${user.isComplete ? \"complete\" : \"\"}`}\n            >\n              <div className=\"col-3\">\n                <img\n                  src={`http://alanthinks.com/projects/medical-audit-app/media/specialties/${\n                    user.category\n                  }.png`}\n                  alt={`${user.category} symbol`}\n                />\n                <i className=\"fas fa-check\" />\n              </div>\n              <div className=\"col pl-3\">\n                <h3>#{user.caseId}</h3>\n                <div>\n                  <i\n                    onClick={e => this.deleteCase(e, dispatch)}\n                    className=\"fas fa-trash\"\n                  />\n                </div>\n                <i\n                  onClick={e => this.editCase(e, dispatch)}\n                  className=\"fas fa-edit\"\n                />\n                <div className=\"case-description\">\n                  <ul className=\"tags\">\n                    {hospitals.slice(0, user.numHospitals).map((name, i) => (\n                      <li key={i}>{name}</li>\n                    ))}\n                  </ul>\n                  {this.showBalance()}\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../context\"\nimport uniqid from \"uniqid\"\n\nexport default class NewCaseButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: {\n        id: this.props.uniqid,\n        caseId: uniqid(),\n        numHospitals: 1,\n        category: \"orthopedic\",\n        balance: \"\",\n        isComplete: false\n      },\n      toggleNewCase: this.props.toggleNewCase\n    }\n    this.toggleNewCase = this.toggleNewCase.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  createCase(e, dispatch) {\n    e.preventDefault()\n    this.state.toggleNewCase()\n    dispatch({ type: \"CREATE_CASE\", payload: this.state.user })\n  }\n\n  toggleNewCase() {\n    this.state.toggleNewCase()\n  }\n\n  handleChange(e) {\n    let { user } = this.state\n    user[e.target.name] = e.target.value\n    this.setState({ user: user })\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { categories, dispatch } = value\n          const { user } = this.state\n          return (\n            <div\n              className={`row new-case ${\n                this.props.newCaseHidden ? \"\" : \"hide\"\n              }`}\n            >\n              <div className=\"col\">\n                <i onClick={this.toggleNewCase} className=\"fas fa-times\" />\n                <form onSubmit={e => this.createCase(e, dispatch)}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"idNumberInput\">ID Number</label>\n                    <input\n                      className=\"form-control\"\n                      id=\"idNumberInput\"\n                      name=\"caseId\"\n                      value={user.caseId}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"specialtySelect\">Specialty (Image)</label>\n                    <div className=\"new-case-select\">\n                      <select\n                        name=\"category\"\n                        value={user.category}\n                        onChange={this.handleChange}\n                        className=\"form-control\"\n                        id=\"specialtySelect\"\n                      >\n                        {categories.map((category, i) => (\n                          <option key={i} value={category.toLowerCase()}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"labelsSelect\">Number of Labels</label>\n                    <select\n                      value={user.numHospitals}\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      id=\"labelsSelect\"\n                      name=\"numHospitals\"\n                    >\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"balanceInput\">Balance</label>\n                    <input\n                      className=\"form-control\"\n                      id=\"balanceInput\"\n                      name=\"balance\"\n                      value={user.balance}\n                      onChange={this.handleChange}\n                      placeholder=\"$0.00\"\n                    />\n                  </div>\n                  <button\n                    style={{ display: \"none\" }}\n                    type=\"submit\"\n                    value=\"submit\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport CaseButton from \"./CaseButton\"\nimport NewCaseButton from \"./NewCaseButton\"\nimport { Consumer } from \"../../context\"\nimport SectionTitle from \"../GlobalComponents/SectionTitle\"\nimport uniqid from \"uniqid\"\n\nexport default class MyQueue extends Component {\n  constructor() {\n    super()\n    this.state = { uniqId: uniqid(), isVisible: false, newCaseHidden: false }\n    this.toggleView = this.toggleView.bind(this)\n    this.toggleNewCase = this.toggleNewCase.bind(this)\n  }\n  toggleView() {\n    this.setState({ isVisible: !this.state.isVisible })\n  }\n  toggleNewCase() {\n    this.setState({\n      uniqId: uniqid(),\n      newCaseHidden: !this.state.newCaseHidden\n    })\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { myQueue } = value\n          return (\n            <div className=\"col-lg-5 my-queue\">\n              <SectionTitle\n                h2=\"My Queue\"\n                toggleView={this.toggleView}\n                isVisible={this.state.isVisible}\n              />\n              <i onClick={this.toggleNewCase} className=\"fas fa-plus\" />\n              <div\n                className={`all-cases ${\n                  this.state.isVisible ? \"\" : \"not-visible\"\n                }`}\n              >\n                <NewCaseButton\n                  uniqId={this.state.uniqId}\n                  toggleNewCase={this.toggleNewCase}\n                  newCaseHidden={this.state.newCaseHidden}\n                />\n                {myQueue.map(caseItem => (\n                  <CaseButton\n                    key={caseItem.caseId}\n                    case={caseItem}\n                    id={caseItem.id}\n                  />\n                ))}\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport MediaQuery from \"react-responsive\"\n\nimport WeeklyPerformance from \"./WeeklyPerfComponents/WeeklyPerformance\"\nimport MyTasks from \"./MyTasksComponents/MyTasks\"\nimport TeamSummary from \"./TeamSummaryComponents/TeamSummary\"\nimport MyQueue from \"./MyQueueComponents/MyQueue\"\n\nexport default class DashboardView extends Component {\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"row\">\n          <MediaQuery minWidth={990}>\n            {matches => {\n              if (matches) {\n                return (\n                  <React.Fragment>\n                    <WeeklyPerformance />\n                    <MyTasks />\n                    <TeamSummary />\n                    <MyQueue />\n                  </React.Fragment>\n                )\n              } else {\n                return (\n                  <React.Fragment>\n                    <WeeklyPerformance />\n                    <TeamSummary />\n                    <MyQueue />\n                    <MyTasks />\n                  </React.Fragment>\n                )\n              }\n            }}\n          </MediaQuery>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n\nexport default class CaseSearchView extends Component {\n  render() {\n    return (\n      <div className=\"casesearch-container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h2>Case Search</h2>\n            <button>Open</button>\n            <button>Specialties</button>\n            <button>Hospital</button>\n            <div className=\"row\" />\n            <div className=\"row\">\n              <div className=\"col\">case buttons</div>\n            </div>\n          </div>\n          <div className=\"col\">\n            <h2>My Queue</h2>\n            <button>case1</button>\n            <button>case2</button>\n            <button>case3</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","// React & Router Imports\nimport React, { Component } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { Provider } from \"./context\"\n\n// Components\n// import LoginView from \"./Components/LoginView\"\nimport NavigationBar from \"./Components/GlobalComponents/NavigationBar\"\nimport ModalSettings from \"./Components/GlobalComponents/ModalSettings\"\nimport DashboardView from \"./Components/DashboardView\"\nimport CaseSearchView from \"./Components/CaseSearchView\"\nimport \"./css/styles.css\"\n\nclass Router extends Component {\n  render() {\n    return (\n      <Provider>\n        <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\n          <div className=\"container\">\n            <ModalSettings />\n            <NavigationBar />\n            <Switch>\n              <Route exact path=\"/\" component={DashboardView} />z\n              <Route exact path=\"/allcases\" component={CaseSearchView} />\n              {/* <Route component={NotFound} /> */}\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./css/index.css\"\nimport Router from \"./Router\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<Router />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}