{"version":3,"sources":["data/context.js","Components/Thumbnail.js","Components/ThumbnailsView.js","Components/ProductDetailView.js","Components/NavigationBar.js","Router.js","serviceWorker.js","index.js"],"names":["items","data","SalesRep","ManufacturerData","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","Thumbnail","_ref","onClick","id","imageUrl","itemName","className","name","src","alt","ThumbnailsView","showContactInfo","screenSize","width","height","viewModal","selectedItem","ItemName","Description","BasePrice","updateWindowDimensions","bind","assertThisInitialized","closeModal","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","e","filter","item","ProductID","toString","target","_this2","imageWidth","truncDescription","_this2$state$selected","substring","console","log","modalPhotoUrl","PhotoName","style","opacity","visibility","transition","float","color","Link","to","parseFloat","toFixed","map","Components_Thumbnail","ProductDetailView","currentProductId","match","params","ItemID","ManufacturerID","Dimensions","OnHandQuantity","NavigationBar","CompanyName","Router","context_Provider","BrowserRouter","NavigationBar_NavigationBar","Switch","Route","exact","path","component","ProductDetailsView","Boolean","location","hostname","ReactDOM","render","src_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f90b0f5.chunk.js","sourcesContent":["import React, { Component } from \"react\"\n// import axios from \"axios\"\nimport data from \"./test.json\"\nconst { items, SalesRep, ...ManufacturerData } = data\n\nconst Context = React.createContext()\n\nexport class Provider extends Component {\n  state = {\n    items,\n    SalesRep,\n    ManufacturerData\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import React from \"react\"\n\nconst Thumbnail = ({ onClick, id, imageUrl, itemName }) => {\n  return (\n    <img\n      className=\"feed-thumbnail\"\n      name={id}\n      onClick={onClick}\n      src={imageUrl}\n      alt={itemName}\n    />\n  )\n}\n\nexport default Thumbnail\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\nimport Thumbnail from \"./Thumbnail\"\nimport { Link } from \"react-router-dom\"\n\nexport default class ThumbnailsView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showContactInfo: true,\n      screenSize: { width: 0, height: 0 },\n      viewModal: false,\n      selectedItem: { ItemName: \"\", Description: \"\", BasePrice: \"\" }\n    }\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.viewModal = this.viewModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      screenSize: { width: window.innerWidth, height: window.innerHeight }\n    })\n  }\n  viewModal(e, items) {\n    if (!this.state.viewModal) {\n      const selectedItem = items.filter(\n        item => item.ProductID.toString() === e.target.name\n      )\n      this.setState({\n        viewModal: true,\n        selectedItem: selectedItem[0]\n      })\n    }\n  }\n  closeModal() {\n    this.setState({\n      viewModal: false\n    })\n  }\n  render() {\n    const { width } = this.state.screenSize\n    let imageWidth = 350\n    if (width > 600) {\n      imageWidth = 600\n    }\n\n    return (\n      <Consumer>\n        {value => {\n          const { items } = value\n          const {\n            ProductID,\n            ItemName,\n            BasePrice,\n            Description\n          } = this.state.selectedItem\n          let truncDescription\n          if (Description.length > 74) {\n            truncDescription = Description.substring(0, 75) + ` ...Read More`\n          } else {\n            truncDescription = Description\n          }\n          console.log(\n            \"%c\" + items[0].ItemName,\n            \"font-family:sans-serif; color:green; font-size:2rem; trans\"\n          )\n          const cropUnt = 300\n          const cropAmount = \"6,6,294,294\"\n          const modalPhotoUrl = `${\n            this.state.selectedItem.PhotoName\n          }?w=${imageWidth *\n            1.5}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`\n          return (\n            <div>\n              <div\n                className=\"modal\"\n                style={\n                  this.state.viewModal\n                    ? {\n                        opacity: 100,\n                        visibility: \"visible\",\n                        transition: \"all 0.2s\"\n                      }\n                    : {\n                        opacity: 0,\n                        visibility: \"hidden\",\n                        transition: \"all 0.2s\"\n                      }\n                }\n              >\n                <div className=\"product-preview-modal\">\n                  <i\n                    onClick={this.closeModal}\n                    style={{ float: \"right\", color: \"grey\" }}\n                    className=\"fas fa-times\"\n                  />\n\n                  <div className=\"preview-header\">\n                    <h2>{ItemName}</h2>\n                  </div>\n                  <div className=\"big-thumbnail\">\n                    <img src={modalPhotoUrl} alt={ItemName} />\n                  </div>\n                  <div className=\"preview-desc\">\n                    <p>{truncDescription}</p>\n                  </div>\n                  <Link to={`./product-detail/${ProductID}`}>\n                    <div className=\"preview-footer\">\n                      <button className=\"btn btn-learn-more\">Learn More</button>\n                      <button className=\"btn modal-price\">\n                        ${parseFloat(BasePrice).toFixed(2)}\n                      </button>\n                    </div>{\" \"}\n                  </Link>\n                </div>\n              </div>\n              <div className=\"container\">\n                {items.map(item => (\n                  <Thumbnail\n                    key={item.ProductID}\n                    onClick={e => this.viewModal(e, items)}\n                    id={item.ProductID}\n                    imageUrl={`${\n                      item.PhotoName\n                    }?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                    itemName={item.ItemName}\n                  />\n                ))}\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\n\nexport default class ProductDetailView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      screenSize: { width: 0, height: 0 },\n      currentProductId: this.props.match.params.id\n    }\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      screenSize: { width: window.innerWidth, height: window.innerHeight }\n    })\n  }\n\n  render() {\n    const { width } = this.state.screenSize\n    let imageWidth = 550\n    if (width > 600) {\n      imageWidth = 650\n    }\n    const cropUnt = 300\n    const cropAmount = \"6,6,294,294\"\n\n    return (\n      <Consumer>\n        {value => {\n          const item = value.items.filter(\n            item => item.ProductID.toString() === this.state.currentProductId\n          )[0]\n          const {\n            ProductID,\n            ManufacturerID,\n            ItemID,\n            ItemName,\n            Description,\n            Dimensions,\n            BasePrice,\n            PhotoName,\n            OnHandQuantity\n          } = item\n          const { SalesRep } = value\n          const { ManufacturerData } = value\n\n          // let truncDescription\n          // if (Description.length > 74) {\n          //   truncDescription = Description.substring(0, 75) + ` ...Read More`\n          // } else {\n          //   truncDescription = Description\n          // }\n\n          // const modalPhotoUrl = `${\n          //   this.state.selectedItem.PhotoName\n          // }?w=${imageWidth *\n          //   1.5}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`\n          return (\n            <div className=\"container product-detail-container\">\n              <div className=\"product-image\">\n                <img\n                  src={`${PhotoName}?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                  alt={ItemName}\n                />\n              </div>\n              <div className=\"product-header\">\n                <h2>{ItemName}</h2>\n              </div>\n              <div className=\"info-bar\">\n                <div className=\"item-id\">Item ID: {ItemID}</div>\n                <div className=\"divider\">|</div>\n                <div className=\"stock-info\">\n                  {OnHandQuantity < 1 ? (\n                    <span style={{ color: \"rgb(225, 0, 0)\" }}>\n                      Out Of Stock\n                    </span>\n                  ) : (\n                    `Stock:\n                  ${OnHandQuantity} Units`\n                  )}\n                </div>\n                <div className=\"divider\">|</div>\n                <button className=\"price\">\n                  ${parseFloat(BasePrice).toFixed(2)}{\" \"}\n                  <i className=\"far fa-caret-square-down\" />\n                </button>\n              </div>\n              <div\n                className={\n                  \"product-description\" +\n                  (!Description ? \" product-description-empty\" : \"\")\n                }\n              >\n                <p> {Description}</p>\n                <em>Dimensions: {Dimensions}</em>\n              </div>\n              <div className=\"sales-rep\" />\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\n\nexport default class NavigationBar extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { ManufacturerID } = value.ManufacturerData\n          return (\n            <nav className=\"search-nav\">\n              <div className=\"nav-logo\">\n                <img\n                  src={`http://images.repzio.com/productimages/${ManufacturerID}/logo${ManufacturerID}_lg.jpg?cropxunits=100&cropyunits=100&crop=0,5,0,-5`}\n                  alt={ManufacturerID.CompanyName}\n                />\n              </div>\n              <div className=\"btn-search\">\n                <i className=\"fas fa-shopping-cart\" />{\" \"}\n              </div>\n            </nav>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport \"./css/styles.css\"\n\n// import NotFound from \"./NotFound\"\nimport { Provider } from \"./data/context\"\nimport ThumbnailsView from \"./Components/ThumbnailsView\"\nimport ProductDetailsView from \"./Components/ProductDetailView\"\nimport NavigationBar from \"./Components/NavigationBar.js\"\n\nclass Router extends Component {\n  render() {\n    return (\n      <Provider>\n        <BrowserRouter>\n          <div className=\"App\">\n            <NavigationBar />\n            <Switch>\n              <Route exact path=\"/\" component={ThumbnailsView} />\n              <Route\n                exact\n                path=\"/product-detail/:id\"\n                component={ProductDetailsView}\n              />\n              {/* <Route component={ThumbnailsView} /> */}\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default Router\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Router from \"./Router\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<Router />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}