{"version":3,"sources":["data/context.js","Components/NotFound.js","Components/Thumbnail.js","Components/ThumbnailPreviewModal.js","Components/MainViews/ThumbnailsView.js","Components/SuggestedItems.js","Components/MainViews/ProductDetailView.js","Components/NavigationBar.js","Components/CheckOutModal.js","Router.js","serviceWorker.js","index.js"],"names":["items","data","SalesRep","ManufacturerData","Context","React","createContext","reducer","state","action","type","newItem","filter","item","payload","ProductID","updatedItems","map","Object","objectSpread","OnHandQuantity","cart","concat","toConsumableArray","returnedItem","i","updatedInventory","checkOutModal","productModal","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","cropUnt","cropAmount","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","NotFound","className","style","fontSize","marginLeft","marginTop","margin","width","Link","fontWeight","color","to","Thumbnail","imgRef","createRef","handleClick","bind","assertThisInitialized","current","click","_this$props","onClick","id","imageUrl","itemName","name","src","alt","ref","ThumbnailPreviewModal","selectedItem","ItemName","Description","BasePrice","PhotoName","addToCart","modalAction","currentModalValue","productId","_this2","_this$props$item","modalPhotoUrl","truncDescription","opacity","visibility","transition","display","e","float","parseFloat","toFixed","disabled","ThumbnailsView","showContactInfo","screenSize","height","viewModal","updateWindowDimensions","console","log","window","addEventListener","removeEventListener","innerWidth","innerHeight","modelValue","toString","target","imageWidth","substring","ThumbnailPreviewModal_ThumbnailPreviewModal","Thumbnail_Thumbnail","SuggestedItems","randomIndexes","doTransition","Fragment","ProductDetailView","currentProductId","indexes","Math","floor","random","scrollTo","formatPhoneNumber","phoneNumberString","match","replace","join","currentId","params","ItemID","Dimensions","SuggestedItems_SuggestedItems","CompanyName","FirstName","LastName","EmailAddress","CellPhone","Phone","City","State","PostalCode","NavigationBar","currentValue","ManufacturerID","CheckOutModal","index","closeModal","removeItem","textAlign","borderBottom","reduce","acc","cur","checkOut","Router","context_Provider","BrowserRouter","basename","process","CheckOutModal_CheckOutModal","NavigationBar_NavigationBar","Switch","Route","exact","path","component","ProductDetailsView","Boolean","location","hostname","ReactDOM","render","src_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fe0e001.chunk.js","sourcesContent":["import React, { Component } from \"react\"\n// import axios from \"axios\"\nimport data from \"./test.json\"\n\nconst { items, SalesRep, ...ManufacturerData } = data\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case `ADD_TO_CART`:\n      const newItem = state.items.filter(\n        item => action.payload === item.ProductID\n      )[0]\n      const updatedItems = state.items.map(function(item) {\n        if (action.payload === item.ProductID) {\n          return { ...item, OnHandQuantity: item.OnHandQuantity - 1 }\n        }\n        return item\n      })\n      return {\n        ...state,\n        items: updatedItems,\n        cart: [newItem, ...state.cart]\n      }\n\n    case `REMOVE_FROM_CART`:\n      const returnedItem = state.cart.filter(\n        (item, i) => action.payload === i\n      )[0]\n\n      const updatedInventory = state.items.map(function(item) {\n        if (item.ProductID === returnedItem.ProductID) {\n          return { ...item, OnHandQuantity: item.OnHandQuantity + 1 }\n        }\n        return item\n      })\n      return {\n        ...state,\n        items: updatedInventory,\n        cart: state.cart.filter((item, i) => action.payload !== i)\n      }\n\n    case `CLEAR_CART`:\n      return {\n        ...state,\n        cart: []\n      }\n\n    case `CHECKOUT_MODAL`:\n      return {\n        ...state,\n        checkOutModal: action.payload\n      }\n\n    case `PRODUCT_MODAL`:\n      return {\n        ...state,\n        productModal: action.payload\n      }\n\n    // case `UPDATE_ITEM`:\n    //   return {\n    //     ...state,\n    //     cart: state.cart.map(\n    //       item => (action.payload === item.ProductID ? item : action.payload)\n    //     )\n    //   }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    items,\n    SalesRep,\n    ManufacturerData,\n    cart: [],\n    checkOutModal: false,\n    productModal: false,\n    cropUnt: 300,\n    cropAmount: \"6,6,294,294\",\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import { Link } from \"react-router-dom\"\nimport React, { Component } from \"react\"\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div style={{ fontSize: \"2rem\", marginLeft: \"15%\", marginTop: 100 }}>\n          <h1 style={{ fontSize: \"4rem\", margin: 0 }}>Oops!</h1>\n          <p style={{ width: 450 }}>404: Sorry! Can't Find That Page</p>\n          <Link style={{ width: 450, fontWeight: 400, color: \"orange\" }} to=\"/\">\n            Click Here To Go Home\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n\nexport default class Thumbnail extends Component {\n  constructor(props) {\n    super(props)\n    this.imgRef = React.createRef()\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.imgRef.current.click()\n  }\n\n  render() {\n    const { onClick, id, imageUrl, itemName } = this.props\n    return (\n      <div className=\"feed-thumbnail-wrap\">\n        <span className=\"thumbnail-name\" onClick={this.handleClick}>\n          {itemName}\n        </span>\n        <img\n          className=\"feed-thumbnail\"\n          name={id}\n          src={imageUrl}\n          alt={itemName}\n          ref={this.imgRef}\n          onClick={onClick}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Consumer } from \"../data/context\"\n\nexport default class ThumbnailPreviewModal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedItem: {\n        ItemName: \"\",\n        Description: \"\",\n        BasePrice: \"\",\n        PhotoName: \"\",\n        OnHandQuantity: \"\"\n      }\n    }\n    this.addToCart = this.addToCart.bind(this)\n    this.modalAction = this.modalAction.bind(this)\n  }\n\n  modalAction(dispatch, currentModalValue) {\n    dispatch({ type: \"PRODUCT_MODAL\", payload: !currentModalValue })\n  }\n\n  addToCart(dispatch, productId, currentModalValue) {\n    if (productId) {\n      dispatch({ type: \"ADD_TO_CART\", payload: productId })\n    }\n    this.modalAction(dispatch, currentModalValue)\n  }\n\n  render() {\n    const { ItemName, ProductID, BasePrice, OnHandQuantity } = this.props.item\n    const { modalPhotoUrl, truncDescription } = this.props\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch, productModal } = value\n          return (\n            <div\n              className=\"modal\"\n              style={\n                productModal && BasePrice\n                  ? {\n                      opacity: 100,\n                      visibility: \"visible\",\n                      transition: \"all 0.2s\"\n                    }\n                  : {\n                      opacity: 0,\n                      visibility: \"hidden\",\n                      transition: \"all 0.2s\",\n                      display: \"none\"\n                    }\n              }\n            >\n              <div className=\"product-preview-modal\">\n                <i\n                  onClick={e => this.modalAction(dispatch, productModal)}\n                  style={{ float: \"right\", color: \"grey\" }}\n                  className=\"fas fa-times\"\n                />\n                <div className=\"preview-header\">\n                  <h2>{ItemName}</h2>\n                </div>\n                <div className=\"big-thumbnail\">\n                  <Link to={`./product-detail/${ProductID}`}>\n                    <img src={modalPhotoUrl} alt={ItemName} />\n                  </Link>\n                </div>\n                <div className=\"preview-desc\">\n                  <p>{truncDescription}</p>\n                </div>\n\n                <div className=\"preview-footer\">\n                  <Link to={`./product-detail/${ProductID}`}>\n                    <button className=\"btn btn-price\">\n                      ${parseFloat(BasePrice).toFixed(2)}\n                    </button>\n                    <button className=\"btn btn-details\">Details</button>\n                  </Link>\n\n                  <button\n                    disabled={OnHandQuantity < 1 ? true : false}\n                    onClick={e =>\n                      this.addToCart(dispatch, ProductID, productModal)\n                    }\n                    className=\"btn btn-add-to-cart\"\n                  >\n                    {OnHandQuantity < 1 ? \"Out Of Stock\" : \"Add To Cart\"}{\" \"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../data/context\"\nimport Thumbnail from \"../Thumbnail\"\nimport ThumbnailPreviewModal from \"../ThumbnailPreviewModal\"\n\nexport default class ThumbnailsView extends Component {\n  constructor(props) {\n    super(props)\n    // Receiving props and initialiazing this components state\n    this.state = {\n      showContactInfo: true,\n      screenSize: { width: 0, height: 0 },\n      viewModal: false,\n      selectedItem: {\n        ItemName: \"\",\n        Description: \"\",\n        BasePrice: \"\",\n        PhotoName: \"\",\n        OnHandQuantity: \"\"\n      }\n    }\n\n    // Binding functions to 'this' instance\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.modalAction = this.modalAction.bind(this)\n\n    console.log(\n      '%c \"Product Viewer App\" by Alan Guevara 👉alanthinks.com',\n      \"font-family:sans-serif; color:rgb(216, 0, 90); font-size:1.5rem; text-align:center; text-shadow:1px 1px 1px darkgrey;\"\n    )\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      screenSize: { width: window.innerWidth, height: window.innerHeight }\n    })\n  }\n\n  modalAction(e, dispatch, modelValue, items) {\n    // Using React's Context API to dispatch this action which tracks\n    // if the modal should be open/close in the Provider\n    if (!modelValue) {\n      const selectedItem = items.filter(\n        item => item.ProductID.toString() === e.target.name\n      )\n      this.setState({\n        selectedItem: selectedItem[0]\n      })\n    }\n    dispatch({ type: \"PRODUCT_MODAL\", payload: !modelValue })\n  }\n\n  render() {\n    const { width } = this.state.screenSize\n    let imageWidth = 350\n    if (width > 600) {\n      imageWidth = 600\n    }\n\n    return (\n      <Consumer>\n        {value => {\n          const { items, dispatch, productModal, cropUnt, cropAmount } = value\n          const { Description } = this.state.selectedItem\n          let truncDescription\n          if (Description.length > 74) {\n            truncDescription = Description.substring(0, 75) + `...`\n          } else {\n            truncDescription = Description\n          }\n          const modalPhotoUrl = `${\n            this.state.selectedItem.PhotoName\n          }?w=${imageWidth *\n            1.5}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`\n\n          return (\n            <div className=\"main\">\n              <ThumbnailPreviewModal\n                item={this.state.selectedItem}\n                modalPhotoUrl={modalPhotoUrl}\n                truncDescription={truncDescription}\n              />\n              <div className=\"container\">\n                {/* Here I map through the 'items' array in order to render each\n              one with its proper HTML */}\n                {items.map(item => (\n                  <Thumbnail\n                    key={item.ProductID}\n                    onClick={e =>\n                      this.modalAction(e, dispatch, productModal, items)\n                    }\n                    id={item.ProductID}\n                    imageUrl={`${\n                      item.PhotoName\n                    }?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                    itemName={item.ItemName}\n                  />\n                ))}\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Consumer } from \"../data/context\"\n\nexport default class SuggestedItems extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { cropUnt, cropAmount, items } = value\n          const { randomIndexes, imageWidth, doTransition } = this.props\n\n          return (\n            <div className=\"suggested-items\">\n              {\n                <React.Fragment>\n                  {/* Here I map through the array with 3 random items\n                   in order to render each one with its proper HTML */}\n                  {[\n                    items[randomIndexes[0]],\n                    items[randomIndexes[1]],\n                    items[randomIndexes[2]]\n                  ].map((item, i) => (\n                    <div key={\"suggestedItem\" + i} className=\"suggested-item\">\n                      <Link\n                        to={`/product-detail/${item.ProductID}`}\n                        onClick={doTransition}\n                      >\n                        <img\n                          src={`${\n                            item.PhotoName\n                          }?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                          alt=\"\"\n                        />\n                      </Link>\n                    </div>\n                  ))}\n                </React.Fragment>\n              }\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../../data/context\"\nimport { Link } from \"react-router-dom\"\nimport SuggestedItems from \"../SuggestedItems\"\n\nexport default class ProductDetailView extends Component {\n  constructor(props) {\n    super(props)\n    // Receiving props and initialiazing this components state\n    this.state = {\n      screenSize: { width: 0, height: 0 },\n      currentProductId: \"\",\n      indexes: [\n        Math.floor(Math.random() * 9),\n        Math.floor(Math.random() * 9),\n        Math.floor(Math.random() * 9)\n      ]\n    }\n    // Every time user goes to a new ProductDetail page it should start at the top:\n    window.scrollTo(0, 0)\n\n    // Binding functions to 'this' instance\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.formatPhoneNumber = this.formatPhoneNumber.bind(this)\n    this.addToCart = this.addToCart.bind(this)\n    this.doTransition = this.doTransition.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions() {\n    // I use this to keep track of the window dimensions\n    // in order to request different images from ImageResizer.\n    // I would improve this, as I don't like this function consantly\n    // being called on this.render()\n\n    this.setState({\n      screenSize: { width: window.innerWidth, height: window.innerHeight }\n    })\n  }\n\n  formatPhoneNumber(phoneNumberString) {\n    // Making sure phones coming from test.json are all uniformed in formatting\n\n    const cleaned = (\"\" + phoneNumberString).replace(/\\D/g, \"\")\n    const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/)\n    if (match) {\n      const intlCode = match[1] ? \"+1 \" : \"\"\n      return [intlCode, \"(\", match[2], \") \", match[3], \"-\", match[4]].join(\"\")\n    }\n    return null\n  }\n\n  addToCart(dispatch, productId) {\n    // Using React's Context API to dispatch this action and payload\n    // over to the Provider in .data/context.js in order to update the\n    // app's state.\n\n    if (productId) {\n      dispatch({ type: \"ADD_TO_CART\", payload: productId })\n    }\n  }\n\n  // This was an earlier function which was meant to get back 3 random\n  // items that did not repeat in order to show in the suggestedItems\n\n  // getSuggestedItems(allItems, numOfItems) {\n  //   const { currentProductId } = this.state\n\n  //   let allOtherItems = allItems.filter(\n  //     item => currentProductId !== item.ProductID.toString()\n  //   )\n\n  //   let suggestedItems = []\n  //   let lastRandom = undefined\n  //   let random\n\n  //   for (var i = 0; i < numOfItems; i++) {\n  //     if (lastRandom === undefined) {\n  //       random = Math.floor(Math.random() * (allOtherItems.length + 1))\n  //     } else {\n  //       random = Math.floor(Math.random() * (allOtherItems.length - 1))\n  //       if (random >= lastRandom) random += 1\n  //     }\n  //     if (random > 8) random = 0\n\n  //     suggestedItems.push(allOtherItems[random])\n  //     lastRandom = random\n  //   }\n\n  //   return suggestedItems\n  // }\n\n  doTransition() {\n    // Every time a user click's one of the suggested 3 items this updates the\n    // component's state with new indexes to be used in the SuggestedItems component\n    // in order to generate 3 new items.\n    // I had a different way of doing this before but it was taking me longer than I wanted\n    // in order to debug it, however in a real life scenario I would improve on this:\n\n    this.setState({\n      ...this.state,\n      indexes: [\n        Math.floor(Math.random() * 9),\n        Math.floor(Math.random() * 9),\n        Math.floor(Math.random() * 9)\n      ]\n    })\n\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    const { width } = this.state.screenSize\n    let imageWidth = 550\n    if (width > 600) {\n      imageWidth = 650\n    }\n\n    return (\n      <Consumer>\n        {value => {\n          let currentId\n          !this.state.currentProductId\n            ? (currentId = this.props.match.params.id)\n            : (currentId = this.state.currentProductId)\n          const item = value.items.filter(\n            item => item.ProductID.toString() === currentId\n          )[0]\n          const {\n            ItemID,\n            ItemName,\n            Description,\n            Dimensions,\n            BasePrice,\n            PhotoName,\n            OnHandQuantity,\n            ProductID\n          } = item\n          const { SalesRep, cropUnt, cropAmount } = value\n\n          return (\n            <div className=\"container\">\n              <div className=\"breadcrumbs\">\n                <Link to=\"/\">\n                  <span>All Products</span>\n                </Link>{\" \"}\n                > {ItemName}\n              </div>\n              <div className=\"product-detail-container\">\n                <div className=\"product-image\">\n                  <img\n                    src={`${PhotoName}?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                    alt={ItemName}\n                  />\n                </div>\n                <div className=\"product-info\">\n                  <div className=\"product-name\">\n                    <h2>{ItemName}</h2>\n                  </div>\n                  <div className=\"info-bar\">\n                    <div className=\"item-id\">Item ID: {ItemID}</div>\n                    <div className=\"divider\">|</div>\n                    <div className=\"stock-info\">\n                      {OnHandQuantity < 1 ? (\n                        <span style={{ color: \"rgb(225, 0, 0)\" }}>\n                          Out Of Stock\n                        </span>\n                      ) : (\n                        `Stock:\n                  ${OnHandQuantity} Units`\n                      )}\n                    </div>\n                    <div className=\"divider\">|</div>\n                    <button className=\"price\">\n                      ${parseFloat(BasePrice).toFixed(2)}\n                      {/* <i className=\"far fa-caret-square-down\" /> */}\n                    </button>\n                  </div>\n                  <div\n                    className={\n                      \"product-description\" +\n                      (!Description ? \" product-description-empty\" : \"\")\n                    }\n                  >\n                    <p>{Description}</p>\n                    <em>Dimensions: {Dimensions}</em>\n                  </div>\n                  <div className=\"btn-block\">\n                    <button\n                      disabled={OnHandQuantity < 1 ? true : false}\n                      onClick={e => this.addToCart(value.dispatch, ProductID)}\n                      className=\"btn btn-add-to-cart btn-block\"\n                    >\n                      {OnHandQuantity < 1 ? \"Out Of Stock\" : \"Add To Cart\"}\n                    </button>\n                  </div>\n                  <SuggestedItems\n                    randomIndexes={this.state.indexes}\n                    item={item}\n                    imageWidth={imageWidth}\n                    doTransition={this.doTransition}\n                  />\n                  <div className=\"sales-rep\">\n                    <h3>Sales Representative:</h3>\n\n                    <div className=\"sales-rep-table\">\n                      <table>\n                        <tbody>\n                          <tr>\n                            <td>Company:</td>\n                            <td>{SalesRep.CompanyName}</td>\n                          </tr>\n                          <tr>\n                            <td>Name:</td>\n                            <td>\n                              {SalesRep.FirstName + \" \" + SalesRep.LastName}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>E-Mail:</td>\n                            <td>{SalesRep.EmailAddress}</td>\n                          </tr>\n                          <tr>\n                            <td>Cell Phone:</td>\n                            <td>\n                              {this.formatPhoneNumber(SalesRep.CellPhone)}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Office Phone:</td>\n                            <td>{this.formatPhoneNumber(SalesRep.Phone)}</td>\n                          </tr>\n                          <tr>\n                            <td>Location: </td>\n                            <td>\n                              {SalesRep.City +\n                                \", \" +\n                                SalesRep.State +\n                                \" \" +\n                                SalesRep.PostalCode}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\nimport { Link } from \"react-router-dom\"\n\nexport default class NavigationBar extends Component {\n  constructor(props) {\n    // Receiving props, initialiazing this components state,\n    // and binding the function(s).\n    super(props)\n    this.state = { viewModal: false }\n    this.modalAction = this.modalAction.bind(this)\n  }\n  modalAction(dispatch, currentValue) {\n    // Using React's Context API to dispatch this action which\n    // track if the modal should be opened/closed in the Provider\n    dispatch({ type: \"CHECKOUT_MODAL\", payload: !currentValue })\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          // ManufacturerID (used for the Logo) comes directly from\n          // the Provider state which comes directly from test.josn\n          const { dispatch, checkOutModal } = value\n          const { ManufacturerID } = value.ManufacturerData\n          return (\n            <nav className=\"top-nav\">\n              <Link to=\"/\">\n                <div className=\"nav-logo\">\n                  <img\n                    src={`http://images.repzio.com/productimages/${ManufacturerID}/logo${ManufacturerID}_lg.jpg?cropxunits=100&cropyunits=100&crop=0,5,0,-5`}\n                    alt={ManufacturerID.CompanyName}\n                  />\n                </div>\n              </Link>\n              <div\n                className=\"btn-cart\"\n                onClick={e => this.modalAction(dispatch, checkOutModal)}\n              >\n                <i className=\"fas fa-shopping-cart\">\n                  <span\n                    className={`car-items-num${\n                      value.cart.length > 9 ? \" dub-digits\" : \"\"\n                    }`}\n                  >\n                    {value.cart < 1 ? \"\" : value.cart.length}\n                  </span>\n                </i>\n              </div>\n            </nav>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\n\nexport default class CheckOutModal extends Component {\n  closeModal(dispatch) {\n    // Using React's Context API to dispatch this action which\n    // track if the modal should be open/closes in the Provider\n    dispatch({ type: \"CHECKOUT_MODAL\", payload: false })\n  }\n\n  removeItem(dispatch, index) {\n    // Sending index of the item in the state.cart which should\n    // be removed.\n    dispatch({ type: \"REMOVE_FROM_CART\", payload: index })\n  }\n  checkOut(dispatch) {\n    // Clearing cart in the Provider\n    dispatch({ type: \"CLEAR_CART\", payload: \"\" })\n    this.closeModal(dispatch)\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          // Data coming from 'vale' comes from the Provider in\n          // ./data/context.js\n          const { dispatch, cart, checkOutModal } = value\n          return (\n            <div\n              className=\"checkout-modal\"\n              style={\n                checkOutModal\n                  ? {\n                      opacity: 100,\n                      visibility: \"visible\",\n                      transition: \"all 0.2s\",\n                      width: 500\n                    }\n                  : {\n                      opacity: 0,\n                      visibility: \"hidden\",\n                      transition: \"all 0.2s\",\n                      width: 0,\n                      display: \"none\"\n                    }\n              }\n            >\n              <div className=\"checkout-body\">\n                <i\n                  onClick={e => this.closeModal(dispatch)}\n                  style={{\n                    float: \"right\",\n                    color: \"grey\",\n                    fontSize: \"1.2rem\"\n                  }}\n                  className=\"fas fa-times\"\n                />\n                <div className=\"header\">\n                  <h2>Check-Out</h2>\n                </div>\n\n                <div className=\"items-table\">\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>{cart.length > 0 ? \"Item\" : \"\"}</th>\n                        <th>{cart.length > 0 ? \"Price\" : \"\"}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {cart.length > 0 ? (\n                        cart.map((item, i) => (\n                          <tr key={`checkout item ${i}`}>\n                            <td>\n                              {item.ItemName}\n                              <i\n                                onClick={e => this.removeItem(dispatch, i)}\n                                className=\"far fa-trash-alt\"\n                              />\n                            </td>\n                            <td>${parseFloat(item.BasePrice).toFixed(2)}</td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr>\n                          <td style={{ textAlign: \"center\" }}>\n                            Your Shopping Cart Is Empty\n                          </td>\n                        </tr>\n                      )}\n                      <tr style={cart.length > 0 ? {} : { display: \"none\" }}>\n                        <td style={{ float: \"right\", borderBottom: \"none\" }}>\n                          TOTAL:{\" \"}\n                        </td>\n                        <td style={{ fontWeight: 400 }}>\n                          $\n                          {parseFloat(\n                            cart\n                              ? cart.reduce(\n                                  (acc, cur) => acc + cur.BasePrice,\n                                  0\n                                )\n                              : \"0\"\n                          ).toFixed(2)}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <button\n                    onClick={e => this.checkOut(dispatch)}\n                    style={\n                      cart.length < 1\n                        ? { display: \"none\" }\n                        : { display: \"block\" }\n                    }\n                    className=\"btn btn-block btn-add-to-cart btn-checkout\"\n                  >\n                    Check-Out\n                  </button>\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","// React & Router Imports\nimport React, { Component } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { Provider } from \"./data/context\"\n\n// Components\nimport NotFound from \"./Components/NotFound\"\nimport ThumbnailsView from \"./Components/MainViews/ThumbnailsView\"\nimport ProductDetailsView from \"./Components/MainViews/ProductDetailView\"\nimport NavigationBar from \"./Components/NavigationBar\"\nimport CheckOutModal from \"./Components/CheckOutModal\"\nimport \"./css/styles.css\"\n\nclass Router extends Component {\n  render() {\n    return (\n      <Provider>\n        <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\n          <div className=\"main\">\n            <CheckOutModal />\n            <NavigationBar />\n            <Switch>\n              <Route exact path=\"/\" component={ThumbnailsView} />\n              <Route\n                exact\n                path=\"/product-detail/:id\"\n                component={ProductDetailsView}\n              />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default Router\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Router from \"./Router\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<Router />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}