{"version":3,"sources":["Components/NotFound.js","data/context.js","Components/Thumbnail.js","Components/ThumbnailsView.js","Components/ProductDetailView.js","Components/NavigationBar.js","Router.js","serviceWorker.js","index.js"],"names":["NotFound","react_default","a","createElement","style","marginTop","marginLeft","Link","to","Component","items","data","SalesRep","ManufacturerData","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","props","children","Consumer","Thumbnail","_ref","onClick","id","imageUrl","itemName","className","name","src","alt","ThumbnailsView","showContactInfo","screenSize","width","height","viewModal","selectedItem","ItemName","Description","BasePrice","updateWindowDimensions","bind","assertThisInitialized","closeModal","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","e","filter","item","ProductID","toString","target","_this2","imageWidth","truncDescription","_this2$state$selected","substring","console","log","modalPhotoUrl","PhotoName","opacity","visibility","transition","float","color","parseFloat","toFixed","map","Components_Thumbnail","ProductDetailView","currentProductId","match","params","ItemID","ManufacturerID","Dimensions","OnHandQuantity","NavigationBar","CompanyName","Router","context_Provider","BrowserRouter","NavigationBar_NavigationBar","Switch","Route","exact","path","component","ProductDetailsView","Boolean","location","hostname","ReactDOM","render","src_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26f9c60e.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\nimport React, { Component } from \"react\"\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div style={{ marginTop: 100, marginLeft: 50 }}>\n        <h1>Oops!</h1>\n        <p>404: Sorry! Can't Find That Page</p>\n        <Link to=\"/\">Click Here To Go Home</Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\n// import axios from \"axios\"\nimport data from \"./test.json\"\nconst { items, SalesRep, ...ManufacturerData } = data\n\nconst Context = React.createContext()\n\nexport class Provider extends Component {\n  state = {\n    items,\n    SalesRep,\n    ManufacturerData\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import React from \"react\"\n\nconst Thumbnail = ({ onClick, id, imageUrl, itemName }) => {\n  return (\n    <img\n      className=\"feed-thumbnail\"\n      name={id}\n      onClick={onClick}\n      src={imageUrl}\n      alt={itemName}\n    />\n  )\n}\n\nexport default Thumbnail\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\nimport Thumbnail from \"./Thumbnail\"\nimport { Link } from \"react-router-dom\"\n\nexport default class ThumbnailsView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showContactInfo: true,\n      screenSize: { width: 0, height: 0 },\n      viewModal: false,\n      selectedItem: { ItemName: \"\", Description: \"\", BasePrice: \"\" }\n    }\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.viewModal = this.viewModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      screenSize: { width: window.innerWidth, height: window.innerHeight }\n    })\n  }\n  viewModal(e, items) {\n    if (!this.state.viewModal) {\n      const selectedItem = items.filter(\n        item => item.ProductID.toString() === e.target.name\n      )\n      this.setState({\n        viewModal: true,\n        selectedItem: selectedItem[0]\n      })\n    }\n  }\n  closeModal() {\n    this.setState({\n      viewModal: false\n    })\n  }\n  render() {\n    const { width } = this.state.screenSize\n    let imageWidth = 350\n    if (width > 600) {\n      imageWidth = 600\n    }\n\n    return (\n      <Consumer>\n        {value => {\n          const { items } = value\n          const {\n            ProductID,\n            ItemName,\n            BasePrice,\n            Description\n          } = this.state.selectedItem\n          let truncDescription\n          if (Description.length > 74) {\n            truncDescription = Description.substring(0, 75) + ` ...Read More`\n          } else {\n            truncDescription = Description\n          }\n          console.log(\n            \"%c\" + items[0].ItemName,\n            \"font-family:sans-serif; color:green; font-size:2rem; trans\"\n          )\n          const cropUnt = 300\n          const cropAmount = \"6,6,294,294\"\n          const modalPhotoUrl = `${\n            this.state.selectedItem.PhotoName\n          }?w=${imageWidth *\n            1.5}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`\n          return (\n            <div>\n              <div\n                className=\"modal\"\n                style={\n                  this.state.viewModal\n                    ? {\n                        opacity: 100,\n                        visibility: \"visible\",\n                        transition: \"all 0.2s\"\n                      }\n                    : {\n                        opacity: 0,\n                        visibility: \"hidden\",\n                        transition: \"all 0.2s\"\n                      }\n                }\n              >\n                <div className=\"product-preview-modal\">\n                  <i\n                    onClick={this.closeModal}\n                    style={{ float: \"right\", color: \"grey\" }}\n                    className=\"fas fa-times\"\n                  />\n\n                  <div className=\"preview-header\">\n                    <h2>{ItemName}</h2>\n                  </div>\n                  <div className=\"big-thumbnail\">\n                    <img src={modalPhotoUrl} alt={ItemName} />\n                  </div>\n                  <div className=\"preview-desc\">\n                    <p>{truncDescription}</p>\n                  </div>\n                  <Link to={`./product-detail/${ProductID}`}>\n                    <div className=\"preview-footer\">\n                      <button className=\"btn btn-learn-more\">Learn More</button>\n                      <button className=\"btn modal-price\">\n                        ${parseFloat(BasePrice).toFixed(2)}\n                      </button>\n                    </div>{\" \"}\n                  </Link>\n                </div>\n              </div>\n              <div className=\"container\">\n                {items.map(item => (\n                  <Thumbnail\n                    key={item.ProductID}\n                    onClick={e => this.viewModal(e, items)}\n                    id={item.ProductID}\n                    imageUrl={`${\n                      item.PhotoName\n                    }?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                    itemName={item.ItemName}\n                  />\n                ))}\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\n\nexport default class ProductDetailView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      screenSize: { width: 0, height: 0 },\n      currentProductId: this.props.match.params.id\n    }\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      screenSize: { width: window.innerWidth, height: window.innerHeight }\n    })\n  }\n\n  render() {\n    const { width } = this.state.screenSize\n    let imageWidth = 550\n    if (width > 600) {\n      imageWidth = 650\n    }\n    const cropUnt = 300\n    const cropAmount = \"6,6,294,294\"\n\n    return (\n      <Consumer>\n        {value => {\n          const item = value.items.filter(\n            item => item.ProductID.toString() === this.state.currentProductId\n          )[0]\n          const {\n            ProductID,\n            ManufacturerID,\n            ItemID,\n            ItemName,\n            Description,\n            Dimensions,\n            BasePrice,\n            PhotoName,\n            OnHandQuantity\n          } = item\n          const { SalesRep } = value\n          const { ManufacturerData } = value\n\n          // let truncDescription\n          // if (Description.length > 74) {\n          //   truncDescription = Description.substring(0, 75) + ` ...Read More`\n          // } else {\n          //   truncDescription = Description\n          // }\n\n          // const modalPhotoUrl = `${\n          //   this.state.selectedItem.PhotoName\n          // }?w=${imageWidth *\n          //   1.5}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`\n          return (\n            <div className=\"container product-detail-container\">\n              <div className=\"product-image\">\n                <img\n                  src={`${PhotoName}?w=${imageWidth}&h=${imageWidth}&cropxunits=${cropUnt}&cropyunits=${cropUnt}&crop=${cropAmount}`}\n                  alt={ItemName}\n                />\n              </div>\n              <div className=\"product-header\">\n                <h2>{ItemName}</h2>\n              </div>\n              <div className=\"info-bar\">\n                <div className=\"item-id\">Item ID: {ItemID}</div>\n                <div className=\"divider\">|</div>\n                <div className=\"stock-info\">\n                  {OnHandQuantity < 1 ? (\n                    <span style={{ color: \"rgb(225, 0, 0)\" }}>\n                      Out Of Stock\n                    </span>\n                  ) : (\n                    `Stock:\n                  ${OnHandQuantity} Units`\n                  )}\n                </div>\n                <div className=\"divider\">|</div>\n                <button className=\"price\">\n                  ${parseFloat(BasePrice).toFixed(2)}{\" \"}\n                  <i className=\"far fa-caret-square-down\" />\n                </button>\n              </div>\n              <div\n                className={\n                  \"product-description\" +\n                  (!Description ? \" product-description-empty\" : \"\")\n                }\n              >\n                <p> {Description}</p>\n                <em>Dimensions: {Dimensions}</em>\n              </div>\n              <div className=\"sales-rep\" />\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Consumer } from \"../data/context\"\n\nexport default class NavigationBar extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { ManufacturerID } = value.ManufacturerData\n          return (\n            <nav className=\"search-nav\">\n              <div className=\"nav-logo\">\n                <img\n                  src={`http://images.repzio.com/productimages/${ManufacturerID}/logo${ManufacturerID}_lg.jpg?cropxunits=100&cropyunits=100&crop=0,5,0,-5`}\n                  alt={ManufacturerID.CompanyName}\n                />\n              </div>\n              <div className=\"btn-search\">\n                <i className=\"fas fa-shopping-cart\" />{\" \"}\n              </div>\n            </nav>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport \"./css/styles.css\"\n\nimport NotFound from \"./Components/NotFound\"\nimport { Provider } from \"./data/context\"\nimport ThumbnailsView from \"./Components/ThumbnailsView\"\nimport ProductDetailsView from \"./Components/ProductDetailView\"\nimport NavigationBar from \"./Components/NavigationBar\"\n\nclass Router extends Component {\n  render() {\n    return (\n      <Provider>\n        <BrowserRouter>\n          <div className=\"App\">\n            <NavigationBar />\n            <Switch>\n              <Route exact path=\"/\" component={ThumbnailsView} />\n              <Route\n                exact\n                path=\"/product-detail/:id\"\n                component={ProductDetailsView}\n              />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default Router\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Router from \"./Router\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<Router />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}